openapi: 3.0.0
info:
  version: 1.0.0
  title: realmeet
servers:
  - url: 'http://localhost:3000'

paths:
  /rooms/{id}: #operações passando o id
    #    GET AQUI
    get:
      summary: 'Retorna a rooms by id'
      operationId: getRoom
      tags:
        - /room
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the room
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: 'ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomDTO'
        404:
          description: Not found
    #DELETE AQUI
    delete:
      summary: 'Deletes a room by Id'
      operationId: deleteRoom
      tags:
        - /room
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the room
          schema:
            type: integer
            format: int64
      responses:
        204: #sucesso
          description: 'Deletado com sucesso'
        404: #id não encontrado
          description: Not found

    #    ALTERAÇÃO AQUI
    put:
      summary: 'Updates a room by Id'
      operationId: updateRoom
      tags:
        - /room
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the room
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoomDTO'
        required: true
      responses:
        204: #sucesso
          description: 'Atualizado com sucesso'
        404: #id não encontrado
          description: Not found
        422: #erros de validação
          $ref: '#/components/responses/UnprocessableEntity'

  /rooms: #operações sem passar o Id
    post:
      summary: 'Creates a room'
      operationId: createRoom
      tags:
        - room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoomDTO'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomDTO'
        422: #erros de validação
          $ref: '#/components/responses/UnprocessableEntity'

  #----------INICIO ALLOCATION-------------
  /allocations: #operações sem passar o Id
    post:
      summary: 'Creates a allocation'
      operationId: createAllocation
      tags:
        - allocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAllocationDTO'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationDTO'
        422: #erros de validação
          $ref: '#/components/responses/UnprocessableEntity'

      #    DELETE AQUI
  /allocations/{id}:
    delete:
      summary: 'Deletes allocation by Id'
      operationId: deleteAllocation
      tags:
        - /allocation
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the allocation
          schema:
            type: integer
            format: int64
      responses:
        204: #sucesso
          description: 'Deletado com sucesso'
        404: #id não encontrado
          description: Not found
        422:
          $ref: '#/components/responses/UnprocessableEntity'

      #    ALTERAÇÃO AQUI
    put:
      summary: 'Updates a allocation by Id'
      operationId: updateAllocation
      tags:
        - /allocation
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the allocation
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAllocationDTO'
        required: true
      responses:
        204: #sucesso
          description: 'Atualizado com sucesso'
        404: #id não encontrado
          description: Not found
        422: #erros de validação
          $ref: '#/components/responses/UnprocessableEntity'
#----------FIM ALLOCATION-------------

components:
  schemas:
    #------------INICIO ROOM DTO----------
    UpdateRoomDTO: # para criar a ROOM
      type: object
      properties:
        #passar os atributos para cadastrar menos o Id
        name:
          type: string
        seats:
          type: integer
    CreateRoomDTO: # para criar a ROOM
      type: object
      #referencia o update roomdto para não repetir código
      allOf:
        - $ref: '#/components/schemas/UpdateRoomDTO'

    RoomDTO: #para retornar a ROOM
      type: object
      allOf: #referencia o update roomdto para não repetir código, retornar tudo do create room dto mais o id
        - $ref: '#/components/schemas/CreateRoomDTO'
        - type: object
          properties:
            id:
              type: integer
              format: int64
    #------------FIM ROOM DTO----------

    #------------INICIO ALLOCATION DTO----------
    UpdateAllocationDTO: # para alterar a Allocation
      type: object
      properties:
        subject:
          type: string
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time

    CreateAllocationDTO: # para criar a Allocation
      type: object
      allOf: #referencia o update AllocationDTO para não repetir código, retornar tudo do create Allocation dto mais o id
        - $ref: '#/components/schemas/UpdateAllocationDTO'
        - type: object
          properties:
            roomId:
              type: integer
              format: int64
            employeeName:
              type: string
            employeeEmail:
              type: string

    AllocationDTO: #para retornar a Allocation
      type: object
      allOf: #referencia o update AllocationDTO para não repetir código, retornar tudo do create Allocation dto mais o id
        - $ref: '#/components/schemas/CreateAllocationDTO'
        - type: object
          properties:
            id:
              type: integer
              format: int64
    #------------FIM ALLOCATION DTO----------

    ResponseError:
      type: object
      required:
        - field
        - errorCode
      properties:
        field:
          type: string
        errorCode:
          type: string

  responses:
    UnprocessableEntity:
      description: O servidor entende o tipo de conteúdo da entidade de solicitacão, mas nao conseguiu processar as instruções contidas.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResponseError'